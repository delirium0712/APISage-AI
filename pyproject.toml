[tool.poetry]
name = "apisage"
version = "3.0.0"
description = "AI-Powered OpenAPI Analysis Tool"
authors = ["APISage Team <teamalacrityai@gmail.com>"]
readme = "README.md"
license = "Non-Commercial"
keywords = ["ai", "api", "openapi", "analysis", "llm", "fastapi", "gradio"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: Other/Proprietary License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Documentation",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
package-mode = false

[tool.poetry.dependencies]
python = ">=3.10,<3.16"

# Core Framework
fastapi = "^0.115.2"
uvicorn = {extras = ["standard"], version = "^0.27.0"}
gunicorn = "^22.0.0"
pydantic = "^2.5.0"
python-dotenv = "^1.0.0"

# LLM & AI
openai = "^1.0.0"

# API Documentation Parsers
pyyaml = "^6.0.0"
openapi-spec-validator = "^0.7.1"

# Web Interface - Using very stable version
gradio = "3.50.2"
plotly = "^5.18.0"
pandas = "^2.1.0"
numpy = "^1.24.0"

# HTTP Client
httpx = "^0.28.1"

# Logging
structlog = "^24.1.0"
watchdog = "^6.0.0"

# Vector Database & Embeddings (optional for large API support)
chromadb = {version = "^0.4.22", optional = true}
sentence-transformers = {version = "^2.2.2", optional = true}
tiktoken = "^0.5.2"
redis = {version = "^5.0.1", optional = true}

[tool.poetry.group.dev.dependencies]
# Development & Testing
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
black = "^24.3.0"
isort = "^5.13.0"
flake8 = "^6.1.0"
mypy = "^1.8.0"
pre-commit = "^3.6.0"

[tool.poetry.group.production.dependencies]


[tool.poetry.urls]
Homepage = "https://github.com/your-org/apisage"
Documentation = "https://docs.apisage.dev"
Repository = "https://github.com/your-org/apisage"
"Bug Tracker" = "https://github.com/your-org/apisage/issues"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"
